//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Ratify Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	unversioned "github.com/ratify-project/ratify/api/unversioned"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*CertificateStore)(nil), (*unversioned.CertificateStore)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CertificateStore_To_unversioned_CertificateStore(a.(*CertificateStore), b.(*unversioned.CertificateStore), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.CertificateStore)(nil), (*CertificateStore)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_CertificateStore_To_v1alpha1_CertificateStore(a.(*unversioned.CertificateStore), b.(*CertificateStore), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CertificateStoreList)(nil), (*unversioned.CertificateStoreList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CertificateStoreList_To_unversioned_CertificateStoreList(a.(*CertificateStoreList), b.(*unversioned.CertificateStoreList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.CertificateStoreList)(nil), (*CertificateStoreList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_CertificateStoreList_To_v1alpha1_CertificateStoreList(a.(*unversioned.CertificateStoreList), b.(*CertificateStoreList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CertificateStoreSpec)(nil), (*unversioned.CertificateStoreSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CertificateStoreSpec_To_unversioned_CertificateStoreSpec(a.(*CertificateStoreSpec), b.(*unversioned.CertificateStoreSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.CertificateStoreSpec)(nil), (*CertificateStoreSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_CertificateStoreSpec_To_v1alpha1_CertificateStoreSpec(a.(*unversioned.CertificateStoreSpec), b.(*CertificateStoreSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CertificateStoreStatus)(nil), (*unversioned.CertificateStoreStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CertificateStoreStatus_To_unversioned_CertificateStoreStatus(a.(*CertificateStoreStatus), b.(*unversioned.CertificateStoreStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PluginSource)(nil), (*unversioned.PluginSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PluginSource_To_unversioned_PluginSource(a.(*PluginSource), b.(*unversioned.PluginSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.PluginSource)(nil), (*PluginSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_PluginSource_To_v1alpha1_PluginSource(a.(*unversioned.PluginSource), b.(*PluginSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PolicyList)(nil), (*unversioned.PolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PolicyList_To_unversioned_PolicyList(a.(*PolicyList), b.(*unversioned.PolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.PolicyList)(nil), (*PolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_PolicyList_To_v1alpha1_PolicyList(a.(*unversioned.PolicyList), b.(*PolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PolicySpec)(nil), (*unversioned.PolicySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PolicySpec_To_unversioned_PolicySpec(a.(*PolicySpec), b.(*unversioned.PolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PolicyStatus)(nil), (*unversioned.PolicyStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PolicyStatus_To_unversioned_PolicyStatus(a.(*PolicyStatus), b.(*unversioned.PolicyStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Store)(nil), (*unversioned.Store)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Store_To_unversioned_Store(a.(*Store), b.(*unversioned.Store), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.Store)(nil), (*Store)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_Store_To_v1alpha1_Store(a.(*unversioned.Store), b.(*Store), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StoreList)(nil), (*unversioned.StoreList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_StoreList_To_unversioned_StoreList(a.(*StoreList), b.(*unversioned.StoreList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.StoreList)(nil), (*StoreList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_StoreList_To_v1alpha1_StoreList(a.(*unversioned.StoreList), b.(*StoreList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StoreSpec)(nil), (*unversioned.StoreSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_StoreSpec_To_unversioned_StoreSpec(a.(*StoreSpec), b.(*unversioned.StoreSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StoreStatus)(nil), (*unversioned.StoreStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_StoreStatus_To_unversioned_StoreStatus(a.(*StoreStatus), b.(*unversioned.StoreStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Verifier)(nil), (*unversioned.Verifier)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Verifier_To_unversioned_Verifier(a.(*Verifier), b.(*unversioned.Verifier), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.Verifier)(nil), (*Verifier)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_Verifier_To_v1alpha1_Verifier(a.(*unversioned.Verifier), b.(*Verifier), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VerifierList)(nil), (*unversioned.VerifierList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VerifierList_To_unversioned_VerifierList(a.(*VerifierList), b.(*unversioned.VerifierList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*unversioned.VerifierList)(nil), (*VerifierList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_VerifierList_To_v1alpha1_VerifierList(a.(*unversioned.VerifierList), b.(*VerifierList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VerifierSpec)(nil), (*unversioned.VerifierSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VerifierSpec_To_unversioned_VerifierSpec(a.(*VerifierSpec), b.(*unversioned.VerifierSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VerifierStatus)(nil), (*unversioned.VerifierStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VerifierStatus_To_unversioned_VerifierStatus(a.(*VerifierStatus), b.(*unversioned.VerifierStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.CertificateStoreStatus)(nil), (*CertificateStoreStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_CertificateStoreStatus_To_v1alpha1_CertificateStoreStatus(a.(*unversioned.CertificateStoreStatus), b.(*CertificateStoreStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.PolicySpec)(nil), (*PolicySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_PolicySpec_To_v1alpha1_PolicySpec(a.(*unversioned.PolicySpec), b.(*PolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.PolicyStatus)(nil), (*PolicyStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_PolicyStatus_To_v1alpha1_PolicyStatus(a.(*unversioned.PolicyStatus), b.(*PolicyStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.Policy)(nil), (*Policy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_Policy_To_v1alpha1_Policy(a.(*unversioned.Policy), b.(*Policy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.StoreSpec)(nil), (*StoreSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_StoreSpec_To_v1alpha1_StoreSpec(a.(*unversioned.StoreSpec), b.(*StoreSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.StoreStatus)(nil), (*StoreStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_StoreStatus_To_v1alpha1_StoreStatus(a.(*unversioned.StoreStatus), b.(*StoreStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.VerifierSpec)(nil), (*VerifierSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_VerifierSpec_To_v1alpha1_VerifierSpec(a.(*unversioned.VerifierSpec), b.(*VerifierSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*unversioned.VerifierStatus)(nil), (*VerifierStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_unversioned_VerifierStatus_To_v1alpha1_VerifierStatus(a.(*unversioned.VerifierStatus), b.(*VerifierStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Policy)(nil), (*unversioned.Policy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Policy_To_unversioned_Policy(a.(*Policy), b.(*unversioned.Policy), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_CertificateStore_To_unversioned_CertificateStore(in *CertificateStore, out *unversioned.CertificateStore, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_CertificateStoreSpec_To_unversioned_CertificateStoreSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_CertificateStoreStatus_To_unversioned_CertificateStoreStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_CertificateStore_To_unversioned_CertificateStore is an autogenerated conversion function.
func Convert_v1alpha1_CertificateStore_To_unversioned_CertificateStore(in *CertificateStore, out *unversioned.CertificateStore, s conversion.Scope) error {
	return autoConvert_v1alpha1_CertificateStore_To_unversioned_CertificateStore(in, out, s)
}

func autoConvert_unversioned_CertificateStore_To_v1alpha1_CertificateStore(in *unversioned.CertificateStore, out *CertificateStore, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_unversioned_CertificateStoreSpec_To_v1alpha1_CertificateStoreSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_unversioned_CertificateStoreStatus_To_v1alpha1_CertificateStoreStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_unversioned_CertificateStore_To_v1alpha1_CertificateStore is an autogenerated conversion function.
func Convert_unversioned_CertificateStore_To_v1alpha1_CertificateStore(in *unversioned.CertificateStore, out *CertificateStore, s conversion.Scope) error {
	return autoConvert_unversioned_CertificateStore_To_v1alpha1_CertificateStore(in, out, s)
}

func autoConvert_v1alpha1_CertificateStoreList_To_unversioned_CertificateStoreList(in *CertificateStoreList, out *unversioned.CertificateStoreList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]unversioned.CertificateStore, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_CertificateStore_To_unversioned_CertificateStore(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_CertificateStoreList_To_unversioned_CertificateStoreList is an autogenerated conversion function.
func Convert_v1alpha1_CertificateStoreList_To_unversioned_CertificateStoreList(in *CertificateStoreList, out *unversioned.CertificateStoreList, s conversion.Scope) error {
	return autoConvert_v1alpha1_CertificateStoreList_To_unversioned_CertificateStoreList(in, out, s)
}

func autoConvert_unversioned_CertificateStoreList_To_v1alpha1_CertificateStoreList(in *unversioned.CertificateStoreList, out *CertificateStoreList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CertificateStore, len(*in))
		for i := range *in {
			if err := Convert_unversioned_CertificateStore_To_v1alpha1_CertificateStore(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_unversioned_CertificateStoreList_To_v1alpha1_CertificateStoreList is an autogenerated conversion function.
func Convert_unversioned_CertificateStoreList_To_v1alpha1_CertificateStoreList(in *unversioned.CertificateStoreList, out *CertificateStoreList, s conversion.Scope) error {
	return autoConvert_unversioned_CertificateStoreList_To_v1alpha1_CertificateStoreList(in, out, s)
}

func autoConvert_v1alpha1_CertificateStoreSpec_To_unversioned_CertificateStoreSpec(in *CertificateStoreSpec, out *unversioned.CertificateStoreSpec, s conversion.Scope) error {
	out.Provider = in.Provider
	out.Parameters = in.Parameters
	return nil
}

// Convert_v1alpha1_CertificateStoreSpec_To_unversioned_CertificateStoreSpec is an autogenerated conversion function.
func Convert_v1alpha1_CertificateStoreSpec_To_unversioned_CertificateStoreSpec(in *CertificateStoreSpec, out *unversioned.CertificateStoreSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_CertificateStoreSpec_To_unversioned_CertificateStoreSpec(in, out, s)
}

func autoConvert_unversioned_CertificateStoreSpec_To_v1alpha1_CertificateStoreSpec(in *unversioned.CertificateStoreSpec, out *CertificateStoreSpec, s conversion.Scope) error {
	out.Provider = in.Provider
	out.Parameters = in.Parameters
	return nil
}

// Convert_unversioned_CertificateStoreSpec_To_v1alpha1_CertificateStoreSpec is an autogenerated conversion function.
func Convert_unversioned_CertificateStoreSpec_To_v1alpha1_CertificateStoreSpec(in *unversioned.CertificateStoreSpec, out *CertificateStoreSpec, s conversion.Scope) error {
	return autoConvert_unversioned_CertificateStoreSpec_To_v1alpha1_CertificateStoreSpec(in, out, s)
}

func autoConvert_v1alpha1_CertificateStoreStatus_To_unversioned_CertificateStoreStatus(in *CertificateStoreStatus, out *unversioned.CertificateStoreStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_CertificateStoreStatus_To_unversioned_CertificateStoreStatus is an autogenerated conversion function.
func Convert_v1alpha1_CertificateStoreStatus_To_unversioned_CertificateStoreStatus(in *CertificateStoreStatus, out *unversioned.CertificateStoreStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_CertificateStoreStatus_To_unversioned_CertificateStoreStatus(in, out, s)
}

func autoConvert_unversioned_CertificateStoreStatus_To_v1alpha1_CertificateStoreStatus(in *unversioned.CertificateStoreStatus, out *CertificateStoreStatus, s conversion.Scope) error {
	// WARNING: in.IsSuccess requires manual conversion: does not exist in peer-type
	// WARNING: in.Error requires manual conversion: does not exist in peer-type
	// WARNING: in.BriefError requires manual conversion: does not exist in peer-type
	// WARNING: in.LastFetchedTime requires manual conversion: does not exist in peer-type
	// WARNING: in.Properties requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_PluginSource_To_unversioned_PluginSource(in *PluginSource, out *unversioned.PluginSource, s conversion.Scope) error {
	out.Artifact = in.Artifact
	out.AuthProvider = in.AuthProvider
	return nil
}

// Convert_v1alpha1_PluginSource_To_unversioned_PluginSource is an autogenerated conversion function.
func Convert_v1alpha1_PluginSource_To_unversioned_PluginSource(in *PluginSource, out *unversioned.PluginSource, s conversion.Scope) error {
	return autoConvert_v1alpha1_PluginSource_To_unversioned_PluginSource(in, out, s)
}

func autoConvert_unversioned_PluginSource_To_v1alpha1_PluginSource(in *unversioned.PluginSource, out *PluginSource, s conversion.Scope) error {
	out.Artifact = in.Artifact
	out.AuthProvider = in.AuthProvider
	return nil
}

// Convert_unversioned_PluginSource_To_v1alpha1_PluginSource is an autogenerated conversion function.
func Convert_unversioned_PluginSource_To_v1alpha1_PluginSource(in *unversioned.PluginSource, out *PluginSource, s conversion.Scope) error {
	return autoConvert_unversioned_PluginSource_To_v1alpha1_PluginSource(in, out, s)
}

func autoConvert_v1alpha1_Policy_To_unversioned_Policy(in *Policy, out *unversioned.Policy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_PolicySpec_To_unversioned_PolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_PolicyStatus_To_unversioned_PolicyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_unversioned_Policy_To_v1alpha1_Policy(in *unversioned.Policy, out *Policy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_unversioned_PolicySpec_To_v1alpha1_PolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_unversioned_PolicyStatus_To_v1alpha1_PolicyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_PolicyList_To_unversioned_PolicyList(in *PolicyList, out *unversioned.PolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]unversioned.Policy, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Policy_To_unversioned_Policy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_PolicyList_To_unversioned_PolicyList is an autogenerated conversion function.
func Convert_v1alpha1_PolicyList_To_unversioned_PolicyList(in *PolicyList, out *unversioned.PolicyList, s conversion.Scope) error {
	return autoConvert_v1alpha1_PolicyList_To_unversioned_PolicyList(in, out, s)
}

func autoConvert_unversioned_PolicyList_To_v1alpha1_PolicyList(in *unversioned.PolicyList, out *PolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			if err := Convert_unversioned_Policy_To_v1alpha1_Policy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_unversioned_PolicyList_To_v1alpha1_PolicyList is an autogenerated conversion function.
func Convert_unversioned_PolicyList_To_v1alpha1_PolicyList(in *unversioned.PolicyList, out *PolicyList, s conversion.Scope) error {
	return autoConvert_unversioned_PolicyList_To_v1alpha1_PolicyList(in, out, s)
}

func autoConvert_v1alpha1_PolicySpec_To_unversioned_PolicySpec(in *PolicySpec, out *unversioned.PolicySpec, s conversion.Scope) error {
	out.Parameters = in.Parameters
	return nil
}

// Convert_v1alpha1_PolicySpec_To_unversioned_PolicySpec is an autogenerated conversion function.
func Convert_v1alpha1_PolicySpec_To_unversioned_PolicySpec(in *PolicySpec, out *unversioned.PolicySpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_PolicySpec_To_unversioned_PolicySpec(in, out, s)
}

func autoConvert_unversioned_PolicySpec_To_v1alpha1_PolicySpec(in *unversioned.PolicySpec, out *PolicySpec, s conversion.Scope) error {
	// WARNING: in.Type requires manual conversion: does not exist in peer-type
	out.Parameters = in.Parameters
	return nil
}

func autoConvert_v1alpha1_PolicyStatus_To_unversioned_PolicyStatus(in *PolicyStatus, out *unversioned.PolicyStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_PolicyStatus_To_unversioned_PolicyStatus is an autogenerated conversion function.
func Convert_v1alpha1_PolicyStatus_To_unversioned_PolicyStatus(in *PolicyStatus, out *unversioned.PolicyStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_PolicyStatus_To_unversioned_PolicyStatus(in, out, s)
}

func autoConvert_unversioned_PolicyStatus_To_v1alpha1_PolicyStatus(in *unversioned.PolicyStatus, out *PolicyStatus, s conversion.Scope) error {
	// WARNING: in.IsSuccess requires manual conversion: does not exist in peer-type
	// WARNING: in.Error requires manual conversion: does not exist in peer-type
	// WARNING: in.BriefError requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_Store_To_unversioned_Store(in *Store, out *unversioned.Store, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_StoreSpec_To_unversioned_StoreSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_StoreStatus_To_unversioned_StoreStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Store_To_unversioned_Store is an autogenerated conversion function.
func Convert_v1alpha1_Store_To_unversioned_Store(in *Store, out *unversioned.Store, s conversion.Scope) error {
	return autoConvert_v1alpha1_Store_To_unversioned_Store(in, out, s)
}

func autoConvert_unversioned_Store_To_v1alpha1_Store(in *unversioned.Store, out *Store, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_unversioned_StoreSpec_To_v1alpha1_StoreSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_unversioned_StoreStatus_To_v1alpha1_StoreStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_unversioned_Store_To_v1alpha1_Store is an autogenerated conversion function.
func Convert_unversioned_Store_To_v1alpha1_Store(in *unversioned.Store, out *Store, s conversion.Scope) error {
	return autoConvert_unversioned_Store_To_v1alpha1_Store(in, out, s)
}

func autoConvert_v1alpha1_StoreList_To_unversioned_StoreList(in *StoreList, out *unversioned.StoreList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]unversioned.Store, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Store_To_unversioned_Store(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_StoreList_To_unversioned_StoreList is an autogenerated conversion function.
func Convert_v1alpha1_StoreList_To_unversioned_StoreList(in *StoreList, out *unversioned.StoreList, s conversion.Scope) error {
	return autoConvert_v1alpha1_StoreList_To_unversioned_StoreList(in, out, s)
}

func autoConvert_unversioned_StoreList_To_v1alpha1_StoreList(in *unversioned.StoreList, out *StoreList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Store, len(*in))
		for i := range *in {
			if err := Convert_unversioned_Store_To_v1alpha1_Store(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_unversioned_StoreList_To_v1alpha1_StoreList is an autogenerated conversion function.
func Convert_unversioned_StoreList_To_v1alpha1_StoreList(in *unversioned.StoreList, out *StoreList, s conversion.Scope) error {
	return autoConvert_unversioned_StoreList_To_v1alpha1_StoreList(in, out, s)
}

func autoConvert_v1alpha1_StoreSpec_To_unversioned_StoreSpec(in *StoreSpec, out *unversioned.StoreSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.Address = in.Address
	out.Source = (*unversioned.PluginSource)(unsafe.Pointer(in.Source))
	out.Parameters = in.Parameters
	return nil
}

// Convert_v1alpha1_StoreSpec_To_unversioned_StoreSpec is an autogenerated conversion function.
func Convert_v1alpha1_StoreSpec_To_unversioned_StoreSpec(in *StoreSpec, out *unversioned.StoreSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_StoreSpec_To_unversioned_StoreSpec(in, out, s)
}

func autoConvert_unversioned_StoreSpec_To_v1alpha1_StoreSpec(in *unversioned.StoreSpec, out *StoreSpec, s conversion.Scope) error {
	out.Name = in.Name
	// WARNING: in.Version requires manual conversion: does not exist in peer-type
	out.Address = in.Address
	out.Source = (*PluginSource)(unsafe.Pointer(in.Source))
	out.Parameters = in.Parameters
	return nil
}

func autoConvert_v1alpha1_StoreStatus_To_unversioned_StoreStatus(in *StoreStatus, out *unversioned.StoreStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_StoreStatus_To_unversioned_StoreStatus is an autogenerated conversion function.
func Convert_v1alpha1_StoreStatus_To_unversioned_StoreStatus(in *StoreStatus, out *unversioned.StoreStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_StoreStatus_To_unversioned_StoreStatus(in, out, s)
}

func autoConvert_unversioned_StoreStatus_To_v1alpha1_StoreStatus(in *unversioned.StoreStatus, out *StoreStatus, s conversion.Scope) error {
	// WARNING: in.IsSuccess requires manual conversion: does not exist in peer-type
	// WARNING: in.Error requires manual conversion: does not exist in peer-type
	// WARNING: in.BriefError requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_Verifier_To_unversioned_Verifier(in *Verifier, out *unversioned.Verifier, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_VerifierSpec_To_unversioned_VerifierSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_VerifierStatus_To_unversioned_VerifierStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Verifier_To_unversioned_Verifier is an autogenerated conversion function.
func Convert_v1alpha1_Verifier_To_unversioned_Verifier(in *Verifier, out *unversioned.Verifier, s conversion.Scope) error {
	return autoConvert_v1alpha1_Verifier_To_unversioned_Verifier(in, out, s)
}

func autoConvert_unversioned_Verifier_To_v1alpha1_Verifier(in *unversioned.Verifier, out *Verifier, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_unversioned_VerifierSpec_To_v1alpha1_VerifierSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_unversioned_VerifierStatus_To_v1alpha1_VerifierStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_unversioned_Verifier_To_v1alpha1_Verifier is an autogenerated conversion function.
func Convert_unversioned_Verifier_To_v1alpha1_Verifier(in *unversioned.Verifier, out *Verifier, s conversion.Scope) error {
	return autoConvert_unversioned_Verifier_To_v1alpha1_Verifier(in, out, s)
}

func autoConvert_v1alpha1_VerifierList_To_unversioned_VerifierList(in *VerifierList, out *unversioned.VerifierList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]unversioned.Verifier, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Verifier_To_unversioned_Verifier(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_VerifierList_To_unversioned_VerifierList is an autogenerated conversion function.
func Convert_v1alpha1_VerifierList_To_unversioned_VerifierList(in *VerifierList, out *unversioned.VerifierList, s conversion.Scope) error {
	return autoConvert_v1alpha1_VerifierList_To_unversioned_VerifierList(in, out, s)
}

func autoConvert_unversioned_VerifierList_To_v1alpha1_VerifierList(in *unversioned.VerifierList, out *VerifierList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Verifier, len(*in))
		for i := range *in {
			if err := Convert_unversioned_Verifier_To_v1alpha1_Verifier(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_unversioned_VerifierList_To_v1alpha1_VerifierList is an autogenerated conversion function.
func Convert_unversioned_VerifierList_To_v1alpha1_VerifierList(in *unversioned.VerifierList, out *VerifierList, s conversion.Scope) error {
	return autoConvert_unversioned_VerifierList_To_v1alpha1_VerifierList(in, out, s)
}

func autoConvert_v1alpha1_VerifierSpec_To_unversioned_VerifierSpec(in *VerifierSpec, out *unversioned.VerifierSpec, s conversion.Scope) error {
	out.Name = in.Name
	out.ArtifactTypes = in.ArtifactTypes
	out.Address = in.Address
	out.Source = (*unversioned.PluginSource)(unsafe.Pointer(in.Source))
	out.Parameters = in.Parameters
	return nil
}

// Convert_v1alpha1_VerifierSpec_To_unversioned_VerifierSpec is an autogenerated conversion function.
func Convert_v1alpha1_VerifierSpec_To_unversioned_VerifierSpec(in *VerifierSpec, out *unversioned.VerifierSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_VerifierSpec_To_unversioned_VerifierSpec(in, out, s)
}

func autoConvert_unversioned_VerifierSpec_To_v1alpha1_VerifierSpec(in *unversioned.VerifierSpec, out *VerifierSpec, s conversion.Scope) error {
	out.Name = in.Name
	// WARNING: in.Version requires manual conversion: does not exist in peer-type
	out.ArtifactTypes = in.ArtifactTypes
	out.Address = in.Address
	out.Source = (*PluginSource)(unsafe.Pointer(in.Source))
	out.Parameters = in.Parameters
	return nil
}

func autoConvert_v1alpha1_VerifierStatus_To_unversioned_VerifierStatus(in *VerifierStatus, out *unversioned.VerifierStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_VerifierStatus_To_unversioned_VerifierStatus is an autogenerated conversion function.
func Convert_v1alpha1_VerifierStatus_To_unversioned_VerifierStatus(in *VerifierStatus, out *unversioned.VerifierStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_VerifierStatus_To_unversioned_VerifierStatus(in, out, s)
}

func autoConvert_unversioned_VerifierStatus_To_v1alpha1_VerifierStatus(in *unversioned.VerifierStatus, out *VerifierStatus, s conversion.Scope) error {
	// WARNING: in.IsSuccess requires manual conversion: does not exist in peer-type
	// WARNING: in.Error requires manual conversion: does not exist in peer-type
	// WARNING: in.BriefError requires manual conversion: does not exist in peer-type
	return nil
}
