name: publish-cosign-sample

on: 
  workflow_dispatch:
   
env:
  REGISTRY: ghcr.io
  
permissions:
  contents: read

jobs:
  build-publish:
    name: "Build and publish cosign signed sample image"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:            
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Install cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0

      - name: Get repo
        run: |          
          echo "REPOSITORY=${{ env.REGISTRY }}/${{ github.repository }}" >> $GITHUB_ENV

      - name: Write signing key to disk
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
          KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: Log in to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build sample images
        run: |
          docker build -t ${REPOSITORY}/cosign-image:signed-key https://github.com/wabbit-networks/net-monitor.git
          docker build --no-cache -t ${REPOSITORY}/cosign-image:signed-keyless https://github.com/wabbit-networks/net-monitor.git
          docker build --no-cache -t ${REPOSITORY}/cosign-image:unsigned https://github.com/wabbit-networks/net-monitor.git
      - name: Push images
        run: |
          docker push ${REPOSITORY}/cosign-image:signed-key
          docker push ${REPOSITORY}/cosign-image:signed-keyless
          docker push ${REPOSITORY}/cosign-image:unsigned
      - name: Sign image with cosign
        run: |
          cosign sign --yes --key cosign.key ${REPOSITORY}/cosign-image:signed-key
          cosign sign --yes ${REPOSITORY}/cosign-image:signed-keyless
