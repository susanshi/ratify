name: quick-start

on:
  pull_request_target:
    types: [labeled]
  pull_request:
    branches:
      - main
      - 1.0.0*
  push:
    branches:
      - 1.0.0*
      - main
  workflow_dispatch:

jobs:
  test-quick-start:
    name: "Run quick start test"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    strategy:
      matrix:
        KUBERNETES_VERSION: ["1.27.7"]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: setup go environment
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: "1.20"
      - name: Run tidy
        run: go mod tidy
      - name: Bootstrap e2e
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          make e2e-bootstrap KUBERNETES_VERSION=${{ matrix.KUBERNETES_VERSION }}
          make generate-certs
      - name: Run e2e with config policy
        run: |
          make e2e-helmfile-install
          make e2e-helmfile-deploy-released-ratify
          make test-quick-start
      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l app=ratify --tail=-1 > logs-ratify-preinstall-${{ matrix.KUBERNETES_VERSION }}-config-policy.json
          kubectl logs -n gatekeeper-system -l app.kubernetes.io/name=ratify --tail=-1 > logs-ratify-${{ matrix.KUBERNETES_VERSION }}-config-policy.json
      - name: Upload artifacts
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ always() }}
        with:
          name: e2e-logs
          path: |
            logs-*.json
